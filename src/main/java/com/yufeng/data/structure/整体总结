该文档用于构建对数据结构的整体知识体系


① 讲一讲数组
   1. 数组是一种线性的数据结构。在计算机中, 它使用的是一块连续的内存来存储相同类型的元素
   2. 数组的优点是支持随机访问, 缺点是长度固定
   3. 在Java中, ArrayList、 Vector、 CopyOnWriteArrayList 都是基于数组实现的一个动态数组
      3-1 其中ArrayList 是非线程安全的; Vector 和 CopyOnWriteArrayList 是线程安全的

   4. 那么数组作为一种基础的数据结构, 通过它还可以实现一些高级数据结构, 比如: 堆、优先队列、区间树、并查集等


② 讲一讲栈
   1. 栈是一种后进先出(LIFO)的线性数据结构, 它只能从栈顶进行入栈或者出栈操作
   2. 它可以基于数组实现, 比如Java中的ArrayDeque类; 也可以通过链表来实现, 比如LinkedList, 它们都实现了Deque接口,
      并且入栈和出栈的时间复杂度都是O(1)
   3. 栈的应用场景也有很多, 比如:
      3-1 浏览器的回退或者前进功能
      3-2 计算机中的撤销操作(Undo 操作)
      3-3 程序调用的系统栈
      3-4 开发工具中括号的匹配

知识点延伸 ———— is-a 和 has-a 的关系
   1. is-a 描述的是继承关系 , 即"是一个"的关系。 比如
      1-1 猫是一个动物, 所以猫这个类可以继承动物类
      1-2 程序员是一个雇员, 所以程序员这个类可以继承雇员类

   2. has-a 描述的是组合关系, 即"有一个"的关系。比如
      2-1 车里有一台发动机, 所以发动机这个类和车这个类之间, 应该是组合关系, 即车中包含了一个发动机的成员变量
      2-2 电脑里有 CPU, 内存、显卡。所以 CPU, 内存, 显卡, 这些类和电脑类之间的关系, 都应该是组合关系


③ 讲一讲队列
   1. 队列是一种先进先出的线性数据结构, 它只能从队首取出元素, 从队尾添加元素
   2. 队列的底层是可以通过数组来实现的, 比如ArrayBlockingQueue; 也可以通过链表实来现, 比如LinkedList
   3. 队列的应用方面有很多, 比如网络数据包的排队; 二叉树广度优先遍历, 都使用到了队列这种数据结构


④ 讲一讲链表
   1. 链表是一种线性的动态数据结构。在计算机中, 它使用的是非连续的内存空间来存储元素
   2. 链表的优点是动态, 因为它没有固定长度的限制; 缺点就是无法随机访问
   3. 链表的种类可以分为4种: 分别是单链表、循环链表、双向链表以及双向循环链表; 在java中, LinkedList是基于双向链表实现的类
   4. 最后还有一点就是链表具有递归的性质





------------------------------------------------------------------------------------------------------------------------



