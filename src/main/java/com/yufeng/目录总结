目录:
   1. 数组  Array
      时间设置: 2019-07-01

   2. 泛型  generic
      时间设置: 2019-07-03

   3. 栈  stack
      时间设置: 2019-07-04

   4. 队列 queue
      时间设置: 2019-07-06

   5. 链表 linkedList
      时间设置: 2019-07-09

   6. 二分搜索树  binarySearchTree
      时间设置: 2019-07-12

   7. 集合 set
      时间设置: 2019-07-15

   8. 映射 map
      时间设置: 2019-07-17

   9. 优先队列和堆 heap
      时间设置: 2019-07-20

   10.比较器 compare
      时间设置: 2019-07-22

   11.线段树(区间树)
      时间设置: 2019-07-25

   12.Trie(字典树)
      时间设置: 2019-07-27

   13.unionFind(并查集)
      时间设置: 2019-07-30

   14.AVLTree(平衡二叉树)
      时间设置: 2019-08-02

   15.redBlackTree(红黑树)
      时间设置: 2019-08-05

   16.hashtable(哈希表)
      时间设置: 2019-08-08

目录:
   1. complexity
      时间设置: 2019-09-01

   2. usingArray
      时间设置: 2019-09-03

   3. binaryTree
      时间设置: 2019-09-06

   4. aboutLinkedList
      时间设置: 2019-09-10

   5. stackAndQueue
      时间设置: 2019-09-13

   6. usingHashTable
      时间设置: 2019-09-17

   7.


目录:
   1. 线性查找法 linearSearch
      时间设置: 2019-10-10

   2. 选择排序和插入排序 sort
      时间设置: 2019-10-12

   3. 归并排序 MergeSort
      时间设置: 2019-10-15

   4. 快速排序 QuickSort
      时间设置: 2019-10-18

   5. 二分查找法  binarySearch(已经写了) 迁移到算法中

   6. 堆排序 HeapSort
      时间设置: 2019-10-21

   7. 冒泡排序 BubbleSort
      时间设置: 2019-10-23

   8. 希尔排序 ShellSort
      时间设置: 2019-10-25

   9. 计数排序和基数排序
      时间设置: 2019-10-28

------------------------------------------------------------------------------------------------------------------------
算法与数据结构体系课程
   1. 算法与数据结构是所有计算机专业的同学必学的课程
   2. 全面介绍经典算法与数据结构的底层实现
   3. 排序算法
      3-1 插入、冒泡、选择、希尔、快速、归并、堆排序、计数排序、桶排序、基数排序
   4. 查找算法
      4-1 线性查找、二分查找
   5. 线性数据结构
      5-1 动态数组、链表、栈、队列、哈希表、

   6. 经典树结构
      6-1 二分搜索树、堆、AVL、红黑树、B类树
   7. 高级数据结构
      7-1 线段树、并查集、Trie、 SQRT分解
   8. 字符串算法
      8-1 KMP、模式匹配

   9. 不仅仅是学习算法与数据结构, 更是深刻理解计算机科学
      9-1 递归、分块、哈希、DFS、BFS
      9-2 如何编写正确的程序
      9-3 如何调试程序
      9-4 语言的学习、应用、类设计、接口设计

   10.所有的算法和数据结构都从零写起
      10-1 面向基础
      10-2 动画展示, 轻松理解算法过程
      10-3 完成属于自己的小型算法和数据结构库
      10-4 大量的算法优化过程, 通过实际测试, 真正看到优化结果

   11.不包括图论算法
      11-1 图论算法讲解强烈推荐: 玩转算法系列————图论精讲
      11-2 市面上少有的系统讲解图论算法的内容
      11-3 融合了刷题

   12.很多专题会使用力扣(Leetcode)帮助大家巩固
      12-1 本课程关注点: 经典算法和数据结构的底层实现
      12-2 刷题关注点: 算法和数据结构的应用
      12-3 算法设计: 回溯法、贪心算法、动态规划 (不是重点讲解)
      12-4 课程会留作业, 作业量可能会比大家想象得多

总结:
   相信学完这个课程, 大家不仅仅对算法和数据结构的理解上升一个巨大的层次
   大大的超越平均水平, 更将对计算机科学, 对程序, 有更深刻的理解


二分查找
   1. 如何编写正确的程序、边界
   2. 处理整数和浮点数的区别

快速排序、归并排序、链表、树结构
   1. 递归, 算法的优化过程

快速排序
   1. 随机算法

哈希表、RK算法
   1. 哈希

桶排序, sqrt分解
   1. 分块思想

线段树、sqrt分解
   1. 区间估计

希尔排序
   1. 没有固定写法的算法

KMP
   1. 确定有限状态自动机

B树
   1. 内存和外存考量的不同

------------------------------------------------------------------------------------------------------------------------
为什么我在工作中, 用不到算法和数据结构?
  1. 实话实说, 业务层面用的确实不多
  2. 操作系统, 编译器, 数据库, 文件压缩, 渲染, 图像识别, 如果真要做这领域的底层开发, 势必要用到算法和数据结构
  3. 大厂为什么喜欢考算法?
     3-1 大厂提供的都是基础服务产品
     3-2 越大的公司，越需要程序员拥有扎实的数据结构和算法功底

  4. 算法和数据结构决定了大家的上限
  5. 最功利的讲: 为了通过面试关, 也要学好算法和数据结构
  6. 不仅仅是算法和数据结构, 操作系统, 网络基础, 编译, 组成原理等, 也很重要


------------------------------------------------------------------------------------------------------------------------












